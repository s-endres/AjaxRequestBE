@model RequestApp.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<Script>
    $(document).ready(function () {

        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            return results[1] || 0;
        }
        
        var bookId = $.urlParam("variable");
        console.log(bookId);


        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getSingleBook",
            data: { BookId: bookId},
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                
                    $("BookId").val(data.BookId);
                    $("#Title").val(data.Title);
                    $("#Description").val(data.Description);
                    $("#ImageUrl").val(data.ImageUrl);
                    $("#Publisher").val(data.Publisher);
                    $("#PublicationYear").val(data.PublicationYear);

            },

            error: function () {
                alert("stephan te falle :c");
            }

        });

        $("#btnEdit").click(function () {
            editeRow(bookId);
        });

    });

    function editeRow (bookId)
    {
        console.log($("#Title").val());
        if (validateMyForm()) {
            $.ajax({
                type: "PUT",
                url: " http://localhost:61232/Books/UpdateBook",
                data: JSON.stringify({
                    BookId: bookId,
                    Title: $("#Title").val(),
                    Description: $("#Description").val(),
                    ImageUrl: $("#ImageUrl").val(),
                    Publisher: $("#Publisher").val(),
                    PublicationYear: $("#PublicationYear").val()
                }),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data) {
                        window.location.replace("http://localhost:61232/Books/");
                    }
                    else {
                        ValidateMyAlert("Class='alert alert-warning'", 'stephan te falle :c', 'Warning')
                    }

                },

                error: function () {
                    ValidateMyAlert("Class='alert alert-danger'", 'stephan te falle. x2', 'Danger')
                }

            });
        }
    }
    

    function validateMyForm() {

        var cellEmpty = true;

        $("input[type='text']").each(function () {
            if ($(this).val().trim() == "") {
                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
            }

            else { changeClass($(this).parent(), "has-error", "has-success"); }
        });

        $("input[type='number']").each(function () {

            if (!$.isNumeric($(this).val()) || $(this).val() <= 0) {

                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
            }
            else { changeClass($(this).parent(), "has-error", "has-success"); }

        });

        return cellEmpty;
    }
    

    function ValidateMyAlert(pClass, pString, tMessege) {

        if (!$("p[" + pClass + "]").length) {
            $("p[class='alert']").remove();
            $(".form-horizontal").append("<p " + pClass + "><strong>" + tMessege + "</strong> " + pString + " </p>");
        }

    }

    function changeClass(input, classRemove, classAdd) {
        input.removeClass(classRemove);
        input.addClass(classAdd);
    }

</Script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" id="btnEdit"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
