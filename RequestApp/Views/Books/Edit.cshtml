@model RequestApp.Models.Book

@{
    ViewBag.Title = "Edit";
}

<!-- DataTables JavaScript -->
<script src="/bower_components/datatables/media/js/jquery.dataTables.min.js"></script>
<script src="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<!-- Select JavaScript -->
<link href="/bower_components/select2/css/select2.min.css" rel="stylesheet" type="text/css">
<script src="/bower_components/select2/js/select2.min.js"></script>

<!-- Summernote -->
<link href="/bower_components/summernote/css/summernote.css" rel="stylesheet" type="text/css">
<script src="/bower_components/summernote/js/summernote.min.js"></script>
<!-- Custom Fonts -->
<link href="/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">

<style>
    .Error {
        border: solid 1px red;
    }
</style>

<h2>Edit</h2>

<Script>
    $(document).ready(function () {

        //<!--DataTables  Initialization -- >
        $table = $('#datatable').DataTable({
            responsive: true,
            "columnDefs": [{
                "targets": [4],
                "orderable": false
            }]
        });

        //<!--Select Initialization -- >
        $("#selectStatus").select2({
            placeholder: "Select a genre",
            allowClear: true
        });

        $("#selectGenre").select2({
            placeholder: "Select a genre",
            allowClear: true
        });

        //<!--summernote Initialization -- >
        $summernote = $(".summernote").summernote({
            height: 150,   //set editable area's height
            codemirror: { // codemirror options
                theme: 'monokai'
            }
        });


        $("#myModal").on('hidden.bs.modal', function () {
            cleanModalForm(); //close modal
        });

        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            return results[1] || 0;
        }

        var bookId = $.urlParam("variable");



        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getStatutes",
            data: "",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (index, item) {
                    $("#selectStatus").append("<option value=" + item.StatusId + ">" + item.Name + "</option>");
                });
            },

            error: function () {
                ValidateMyAlert("Class='alert alert-warning'", 'stephan te falle :c', 'Warning')
            }

        });


        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getGenres",
            data: "",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $.each(data, function (index, item) {
                    $("#selectGenre").append("<option value=" + item.GenreId + ">" + item.Name + "</option>");
                });
            },

            error: function () {
                ValidateMyAlert("Class='alert alert-warning'", 'stephan te falle :c', 'Warning')
            }

        });


        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getSingleBook",
            data: { BookId: bookId},
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data);
                $("BookId").val(data.BookId);
                $("#Title").val(data.Title);
                $summernote.code(data.Description);
                $("#ImageUrl").val(data.ImageUrl);
                $("#Publisher").val(data.Publisher);
                $("#PublicationYear").val(data.PublicationYear);
                $("#selectStatus").val(data.StatusId).trigger('change');
                $("#selectGenre").val(data.GenreIds).trigger('change');
               
                $.each(data.Authors, function (index, item) {
                    var array = [item.FirstName, item.SecondName, item.FirstLastName, item.SecondLastName, "<button type=\"button\"  data-toggle='modal' data-target='#DeleteModal' class=\"glyphicon glyphicon-trash\" onclick = \"removeRow((this))\"></button> <button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\" onclick =\"editRow((this))\" class = \"glyphicon glyphicon-pencil\">"];
                    $table.row.add(array).draw();

                });

            },

            error: function () {
                alert("stephan te falle :c");
            }

        });

        $("#btnEdit").click(function () {
            SaveEditeRow(bookId);
        });

        //<---------------model to delete------------------->
        $("#yesDelete").click(function () {

            $table.row($("#HiddenIndexDelete").val()).remove().draw();

            var tableLength = $table.data().length;
            if (tableLength == 0) {
                $("#btnSave").prop("disabled", true);
            }
            $("#closeDeleteModal").click();
        })

    }); /*<---End document.ready-->*/


     //<---------------options datatable------------------->
    function AddAuthors() {

        if (validateMyModal()) {

            var Data = [$("#dato1").val(), $("#dato2").val(), $("#dato3").val(), $("#dato4").val(), "<button type=\"button\"  data-toggle='modal' data-target='#DeleteModal' class=\"glyphicon glyphicon-trash\" onclick = \"removeRow((this))\"></button> <button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\" onclick =\"editRow((this))\" class = \"glyphicon glyphicon-pencil\">"];
            $table.row.add(Data).draw();

            $("#closeMyModal").click(); //Cerrar modal
            $("#btnEdit").prop("disabled", false);
        }
    }


    function removeRow(button) {

        var ActualRow = $(button).parents("tr");
        var rowIndex = $table.row(ActualRow).index();
        $("#HiddenIndexDelete").val(rowIndex);
    }


    function editRow(button) {
        $("#Add").css("display", "none");
        $("#edit").css("display", "inline");
        $("#titleModel").text("Edit Row");
        var ActualRow = $(button).parents("tr");
        var rowIndex = $table.row(ActualRow).index();
        var row = $table.row(rowIndex).data()
        $("#dato1").val(row[0]);
        $("#dato2").val(row[1]);
        $("#dato3").val(row[2]);
        $("#dato4").val(row[3]);
        $("#HiddenIndex").val(rowIndex);
    }


    function editRowbutton() {

        if (validateMyModal()) {
            var Data = [$("#dato1").val(), $("#dato2").val(), $("#dato3").val(), $("#dato4").val(), "<button type=\"button\"  data-toggle='modal' data-target='#DeleteModal' class=\"glyphicon glyphicon-trash\" onclick = \"removeRow((this))\"></button> <button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\"  onclick =\"editRow((this))\" class = \"glyphicon glyphicon-pencil\">"];

            $table.row($("#HiddenIndex").val()).data(Data).draw();

            $("#Add").css("display", "inline");
            $("#edit").css("display", "none");
            $("#titleModel").text("Add new Row to table");
            $("#closeMyModal").click();
        }
    }

    //<//---------------button Save book-------------------//>
    function SaveEditeRow (bookId)
    {
        console.log($("#Title").val());
        if (validateMyForm()) {

            var authorList = [];
            $("tbody tr").each(function (value, index) {
                var rowIndex = $table.row(value).index();
                var row = $table.row(rowIndex).data()
                var obj = { FirstName: row[0], SecondName: row[1], FirstLastName: row[2], SecondLastName: row[3] }
                authorList.push(obj);
            });

            $.ajax({
                type: "PUT",
                url: " http://localhost:61232/Books/UpdateBook",
                data: JSON.stringify({
                    BookId: bookId,
                    Title: $("#Title").val(),
                    Description: $summernote.code(),
                    ImageUrl: $("#ImageUrl").val(),
                    Publisher: $("#Publisher").val(),
                    PublicationYear: $("#PublicationYear").val(),
                    GenreIds: $("#selectGenre").val(),
                    StatusId: $("#selectStatus").val(),
                    Authors: authorList
                }),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data) {
                        window.location.replace("http://localhost:61232/Books/");
                    }
                    else {
                        ValidateMyAlert("Class='alert alert-warning'", 'stephan te falle :c', 'Warning')
                    }

                },

                error: function () {
                    ValidateMyAlert("Class='alert alert-danger'", 'stephan te falle. x2', 'Danger')
                }

            });
        }

        else { ValidateMyAlert("Class='alert alert-warning'", 'emty slot', 'Warning') }
    }
    


    //<---------------Validations------------------->
    function ValidateMyAlert(pClass, pString, tMessege) {

        if (!$("p[" + pClass + "]").length) {
            $("p[class='alert']").remove();
            $(".form-horizontal").prepend("<p " + pClass + "><strong>" + tMessege + "</strong> " + pString + " </p>");
        }

    }

    function validateMyModal() {
        var cellEmty = true;
        $(".HiddenIndex").each(function () {
            if ($(this).val().trim() == "") {
                $(this).addClass("Error");
                cellEmty = false;
            }
            else { $(this).removeClass("Error"); }
        })
        return cellEmty;
    }

    function validateMyForm() {
        var cellEmpty = true;

        $(".inputText").each(function () {
            if ($(this).val().trim() == "") {
                console.log($(this));
                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
                console.log("soy el 1");
            }

            else { changeClass($(this).parent(), "has-error", "has-success"); }
        });

        $("input[type='number']").each(function () {

            if (!$.isNumeric($(this).val()) || $(this).val() <= 0) {

                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
            }
            else { changeClass($(this).parent(), "has-error", "has-success"); }

        });

        $("select[class='form-control'").each(function () {

            if ($(this).val() == null) {
                console.log("soy null");
                changeClass($(this).parent("div .form-group"), "has-success", "has-error");
                cellEmpty = false;
            }
            else { changeClass($(this).parent("div .form-group"), "has-error", "has-success"); }

        });

        if ($summernote.val().trim() == "") {
            changeClass($(this).parent(), "has-success", "has-error");
            cellEmpty = false;
        }
        else { changeClass($(this).parent(), "has-error", "has-success"); }

        return cellEmpty;
    }

    function changeClass(input, classRemove, classAdd) {
        input.removeClass(classRemove);
        input.addClass(classAdd);
    }

    function cleanModalForm() {
        $(".HiddenIndex ").val("");
        $(".HiddenIndex ").removeClass("Error");
    }

</Script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control inputText" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                <textarea id="summernoteId " class="summernote"></textarea>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control inputText" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control inputText" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Status</label>
            <div class="col-md-10">
                <select id="selectStatus" class="form-control"> </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Genres</label>
            <div class="col-md-10">
                <select id="selectGenre" class="form-control" multiple> </select>
            </div>
        </div>
        <!-- Table -->
        <div class="panel-heading">
            DataTable Advanced Table |
            <button type="button" data-toggle="modal" data-target="#myModal">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </button>
        </div>
        <div class="row">
            <div class="col-md-12">

                <table id="datatable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Second Name</th>
                            <th>First Last Name</th>
                            <th>Second Last Name</th>
                            <th>Buttons</th>
                        </tr>
                    </thead>
                    <tbody> </tbody>
                </table>

            </div>
        </div>
    </div>


        <!-- Modal -->
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="titleModel">Add new Row to table</h4>
                    </div>

                    <div class="modal-body">

                        <label for="usr">First Name:</label><br>
                        <input type="text" class="form-control HiddenIndex" id="dato1"> </input><br>
                        <label for="asd">Second Name:</label><br>
                        <input type="text" class="form-control HiddenIndex" id="dato2"> </input><br>
                        <label for="eds">First Last Name:</label><br>
                        <input type="text" class="form-control HiddenIndex" id="dato3"> </input><br>
                        <label for="wqe">Second Last Name:</label><br>
                        <input type="text" class="form-control HiddenIndex" id="dato4"> </input><br>
                        <input type="text" class="HiddenIndexx" id="HiddenIndex" style="display:none"> </input>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" id="closeMyModal">Close</button>
                            <button type="button" class="btn btn-default" id="Add" onclick="AddAuthors()">Add Row</button>
                            <button type="button" class="btn btn-default" id="edit" onclick="editRowbutton()" style="display:none">Edit Row</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Eliminar -->
        <div id="DeleteModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="titleModelDelete">Delete</h4>
                    </div>

                    <div class="modal-body">

                        <label for="usr">Are you sure you want to delete a row</label><br>
                        <button type="button" class="btn btn-default" id="yesDelete">yes</button>
                        <button type="button" class="btn btn-default" id="noDelete" data-dismiss="modal">No</button>
                        <input type="text" class="HiddenIndexx" id="HiddenIndexDelete" style="display:none"> </input>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" id="closeDeleteModal">Close</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" id="btnEdit"/>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
