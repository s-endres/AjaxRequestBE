@model RequestApp.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<Script>
    $(document).ready(function () {

        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            return results[1] || 0;
        }

        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getSingleBook",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: { bookId: parseInt($.urlParam("BookId")) },
            success: function (data) {
                 if (data) {
                    $("#Title").val(data.Title);
                    $("#Description").val(data.Description);
                    $("#ImageUrl").val(data.ImageUrl);
                    $("#Publisher").val(data.Publisher);
                    $("#PublicationYear").val(data.PublicationYear);
                 } else {
                     window.location.replace("http://localhost:61232/Books/");
                 }
            },
            error: function () {
                window.location.replace("http://localhost:61232/Books/");
            }
        });

        $(document).on('click', '#btnEdit', function () {
            if (ValidateForm()) {
                $('.alert').remove();
                $.ajax({
                    type: 'put',
                    url: 'http://localhost:61232/Books/UpdateBook',
                    data: JSON.stringify({
                        BookId: parseInt($.urlParam("BookId")),
                        Title: $('#Title').val(),
                        Description: $('#Description').val(),
                        ImageURL: $('#ImageUrl').val(),
                        Publisher: $('#Publisher').val(),
                        PublicationYear: $('#PublicationYear').val()
                    }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data) {
                            window.location = 'http://localhost:61232/Books/'
                        } else {
                            $('form').prepend("<div class=\"alert alert-danger alert-dismissable\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">×</a>The book wasn't edited.</div>");
                        }
                    },
                    error: function () {
                        $('form').prepend("<div class=\"alert alert-danger alert-dismissable\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">×</a>Something went wrong while trying to edit the selected book.</div>");
                    }
                });
            }
        });

        function ValidateForm() {
            var IsValid = true;
            $("input[type='text']").each(function () {
                if (IsEmpty($(this))) {
                    IsValid = false;
                }
            });
            if (!IsNumber($("#PublicationYear"))) {
                IsValid = false;
            }
            return IsValid;
        }

        function IsEmpty(input) {
            if (input.val().trim() == '') {
                input.addClass('invalid-input');
                return true;
            } else {
                input.removeClass('invalid-input');
                return false;
            }
        }

        function IsNumber(input) {
            if ($.isNumeric(input.val()) && input.val() > 0) {
                input.removeClass('invalid-input');
                return true;
            } else {
                input.addClass('invalid-input');
                return false;
            }
        }
    });
</Script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" id="btnEdit"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
