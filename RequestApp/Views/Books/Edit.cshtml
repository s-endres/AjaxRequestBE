@model RequestApp.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<style>
    .background-color {
        background-color: #FED9D9;
    }
</style>
<Script>
    $(document).ready(function () {
        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            return results[1] || 0;
        }
        var CurrentBookID = ($.urlParam("BookID"));
        FillForm(CurrentBookID);
        $("#btnEdit").click(function () {
            if (ValidateForm() == true) {
                $.ajax({
                    type: "PUT",
                    url: "http://localhost:61232/Books/UpdateBook",
                    data: JSON.stringify({
                        BookId: CurrentBookID,
                        Title: $("#Title").val(),
                        Description: $("#Description").val(),
                        ImageUrl: $("#ImageUrl").val(),
                        Publisher: $("#Publisher").val(),
                        PublicationYear: $("#PublicationYear").val()
                    }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (JsonData) {
                        if (JsonData) {
                            window.location.replace("http://localhost:61232/Books/Index");

                        } else {
                            ErrorAlert();
                        }

                    },
                    error: function () {
                        ErrorAlert();
                    }
                });
            }
            
        });


    });

    function FillForm(CurrentBookID)
    {
        $.ajax({
            type: "GET",
            url: " http://localhost:61232/Books/getSingleBook",
            data: { BookId: CurrentBookID },
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (JsonData) {
                if (!JsonData)  {
                    ErrorAlert();

                } else {
                    $("#Title").val(JsonData.Title);
                    $("#Description").val(JsonData.Description);
                    $("#ImageUrl").val(JsonData.ImageUrl);
                    $("#Publisher").val(JsonData.Publisher);
                    $("#PublicationYear").val(JsonData.PublicationYear);
                }

            },
            error: function () {
                ErrorAlert();
            }
        });
    }
    function ValidateForm() {
        var SpaceCheck = true;
        $(".form-control").each(function () {
            if ($(this).val().trim() == "" || $(this).val() < 0) {
                SpaceCheck = false;
                $(this).addClass("background-color");
            } else {
                $(this).removeClass("background-color");
            }
        }

        );
        return SpaceCheck;
    }
   
    function ErrorAlert() {
        if ($("#ErrorAlert").length == 0) {
            var htmlModal1 = '<div id=ErrorAlert class="alert alert-danger">' +
                                '<strong>Error!</strong> The request could not be processed correctly, please try again.' +
                             '</div>';
            $("body").append(htmlModal1);
        }
    }

</Script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" id="btnEdit"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
