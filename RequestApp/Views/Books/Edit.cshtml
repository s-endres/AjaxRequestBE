@model RequestApp.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<Script>
    $(document).ready(function () {

        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            return results[1] || 0;
        }

        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/GetSingleBook",
            data: ({
                BookId: $.urlParam('BookId')
            }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (Data) {
                if (Data) {
                    $("#BookId").val(Data.BookId);
                    $("#Title").val(Data.Title);
                    $("#Description").val(Data.Description);
                    $("#ImageUrl").val(Data.ImageUrl);
                    $("#Publisher").val(Data.Publisher);
                    $("#PublicationYear").val(Data.PublicationYear); 
                } else {
                    pError();
                }
            },
            error: function () {
                pError();
            }
        });

        $('#btnEdit').on('click', function () {

            if (validateMyForm()) {
                $.ajax({
                    type: "PUT",
                    url: "http://localhost:61232/Books/UpdateBook",
                    data: JSON.stringify({
                        BookId: $("#BookId").val(),
                        Title: $("#Title").val(),
                        Description: $("#Description").val(),
                        ImageUrl: $("#ImageUrl").val(),
                        Publisher: $("#Publisher").val(),
                        PublicationYear: $("#PublicationYear").val()
                    }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (Data) {
                        if (Data) {
                            window.location.href = 'http://localhost:61232/Books/Index';
                        } else {
                            pError();
                        }
                    },
                    error: function () {
                        pError();
                    }
                });
            }

        });
    });
     
    function pError() {
        if (!$("p[class='ErrorClass']").length) {
            $(".form-horizontal").append("<p class='ErrorClass' style='color: red;'>An error has occurred while loading the data </p>");
        }
    }

    function validateMyForm() {
        var flag = true;
        $("input[type='text']").each(function () {
            if ($(this).val().trim() == "") {
                SwapClass($(this).parent(), "has-success", "has-error");
                flag = false;
            } else {
                SwapClass($(this).parent(), "has-error", "has-success");
            }

        })

        $("input[type='number']").each(function () {
            console.log($(this).val());
            if ($(this).val().trim() == "" || $(this).val() <= 0) {
                SwapClass($(this).parent(), "has-success", "has-error");
                flag = false;
            } else {
                SwapClass($(this).parent(), "has-error", "has-success");
            }

        });
        return flag;
    }
    function SwapClass(ThisText, ClassR, ClassA) {
        $(ThisText).removeClass(ClassR);
        $(ThisText).addClass(ClassA);
    }

</Script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" id="btnEdit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
