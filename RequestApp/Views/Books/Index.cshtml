@model IEnumerable<RequestApp.Models.Book>

@{
    ViewBag.Title = "Index";
}
<!-- MetisMenu CSS -->
<link href="/bower_components/metisMenu/dist/metisMenu.min.css" rel="stylesheet">
<!-- DataTables CSS -->
<link href="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet">
<!-- DataTables Responsive CSS -->
<link href="/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">
<!-- Custom Fonts -->
<link href="/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- DataTables JavaScript -->
<script src="/bower_components/datatables/media/js/jquery.dataTables.min.js"></script>
<script src="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<style>
    #hidden {
        display: none;
    }

    .glyphicon:hover {
        cursor: pointer;
    }
</style>

<script>
    $(document).ready(function () {
        getData();

        $("#btnDelete").click(function () {
            $("#modalDelete").modal("toggle");
            var Index = $table.row($("#hidden").val());
            $.ajax({
                type: "DELETE",
                url: "http://localhost:61232/Books/DeleteBook",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    bookId: Index.data().BookId
                }),
                success: function (data) {
                    if (data) {
                        Index.remove().draw();
                    } else {
                        AddRemove("Alert", "Error", "No me borré");
                    }
                },
                error: function () {
                    AddRemove("Error", "Alert", "Me caí");
                }
            });
        });

        $('tbody').on('click', '.glyphicon-hand-right, .glyphicon-hand-down', function () {
            var tr = $(this).parents('tr');
            var row = $table.row(tr);
            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
                ChangeIcon(this, 'glyphicon-hand-right', 'glyphicon-hand-down');
            } else {
                console.log(row.data());
                row.child(format(row.data().Authors)).show();
                //getAuthorData(row);
                tr.addClass('shown');
                ChangeIcon(this, 'glyphicon-hand-down', 'glyphicon-hand-right');
            }
        });
    });

    function getData() {
        $.get('http://localhost:61232/Books/GetMyJsonValues', function (data) {
            for (var i = 0; i < data.length; i++) {
                data[i].Hand = "<span class='glyphicon glyphicon-hand-right'></span>"
                data[i].Buttons = "<span class='glyphicon glyphicon-remove-circle'> | </span><span class='glyphicon glyphicon-ok-circle'></span>";
            }
            InitiazilateTable(data);
        });
    }

    function InitiazilateTable(data) {
        $table = $('#myDT').DataTable({
            "processing": true,
            "data": data,
            "columns": [
                { "data": "Hand"},
                { "data": "BookId" },
                { "data": "Description" },
                { "data": "ImageUrl" },
                { "data": "PublicationYear" },
                { "data": "Publisher" },
                { "data": "Title" },
                { "data": "Buttons" }
            ],
            responsive: true,
            "order": [[1, "asc"]],
            "columnDefs": [
                {
                    "targets": [0, 7],
                    "orderable": false
                }
            ]
        });
    }

    $(document).on("click", ".glyphicon-remove-circle", function () {
        var Parent = $(this).parents("tr");
        $("#hidden").val($table.row(Parent).index());
        $("#modalDelete").modal('show');
    });

    function AddRemove(idAdd, idRemove, Text) {
        if (!$("#" + idAdd).length) {
            $("#" + idRemove).remove();
            $("#myDT").before('<div class="alert alert-danger" id="' + idAdd + '"><strong>Warning! </strong>' + Text + '</div >');
        }
    }

    $(document).on("click", ".glyphicon-ok-circle", function () {
        window.location.replace("http://localhost:61232/Books/Edit?bookId=" + $table.row($(this).parents("tr")).data().BookId);
    });

    

    function ChangeIcon(Element, add, remove) {
        $(Element).addClass(add);
        $(Element).removeClass(remove);
    }

    function format(data) {
        var Table = '<table width="100%"><thead><tr><th>First Name</th><th>Second Name</th><th>Last Name</th><th>Surname Name</th></tr></thead><tbody>'
        for (var i = 0; i < data.length; i++) {
            Table += '<tr><td>' + data[i].FirstName + '</td><td>' + data[i].SecondName + '</td><td>' + data[i].FirstLastName + '</td><td>' + data[i].SecondLastName + '</td></tr>';
        }
        return Table + '</tbody></table>';
    }

    function getAuthorData(row) {
        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getBookAuthors",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: { bookId: row.data().BookId },
            success: function (data) {
                if (!data) {

                } else {
                    row.child(format(data)).show();
                }
            },
            error: function () {
                
            }
        });
    }
</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table id="myDT" class="table">
    <thead>
        <tr>
            <th>
                <label>Hidden</label>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublicationYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                <label>Buttons</label>
            </th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


<div id="modalDelete" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <p>Do you really want to delete this?<p>
                <input type="text" class="form-control" id="hidden">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-default" id="btnDelete">Delete</button>
            </div>
            <div class="modal-footer">
                
            </div>
        </div>

    </div>
</div>
