@model IEnumerable<RequestApp.Models.Book>

@{
    ViewBag.Title = "Index";
}
<!-- Bootstrap Core CSS -->
<link href="/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- MetisMenu CSS -->
<link href="/bower_components/metisMenu/dist/metisMenu.min.css" rel="stylesheet">
<!-- DataTables CSS -->
<link href="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet">
<!-- DataTables Responsive CSS -->
<link href="/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">
<!-- Custom Fonts -->
<link href="/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- DataTables JavaScript -->
<script src="/bower_components/datatables/media/js/jquery.dataTables.min.js"></script>
<script src="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<script>
    $(document).ready(function () {

        $table = $('#myDT').DataTable({
            responsive: true,
            "order": [[1, "asc"]],
            "columnDefs": [{"targets": [0,7], "orderable": false }]
        });

        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/GetMyJsonValues",
            data: "",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                $.each(data, function (index, item) {

                    var array = ["<td> <button type=\"button\" class=\"glyphicon glyphicon-plus\" onclick = \"ShowChild((this))\"></button> </td>", item.BookId, item.Description, item.ImageUrl, item.PublicationYear, item.Publisher, item.Title, "<button type=\"button\" class=\"glyphicon glyphicon-trash\" onclick = \"removeRow((this))\"></button> <button type=\"button\" onclick =\"editRow((this))\" class = \"glyphicon glyphicon-pencil\">"];
                    $table.row.add(array).draw();
                });

            },

            error: function () {
                alert("stephan te falle :c");
            }

        });


    });

    function editRow (button)
    {
        var actualRow = $(button).parents("tr");
        var rowIndex = $table.row(actualRow).index();
        var row = $table.row(rowIndex).data()
        window.location.replace("http://localhost:61232/Books/Edit?variable=" + row[0]);
    }

    function removeRow(button) {

        var actualRow = $(button).parents("tr");
        deleteForm(actualRow);
        $('#exampleModal').modal('show');

    }


    function deleteForm(ActualRow) {

        var rowIndex = $table.row(ActualRow).index();
        var row = $table.row(rowIndex).data()

        $("#yesDelete").click(function () {
            $.ajax({
                type: "DELETE",
                url:" http://localhost:61232/Books/DeleteBook" ,
                data: JSON.stringify({BookId:row[0]}),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    
                    if (data) {

                       $table.row(ActualRow).remove().draw();
                        ValidateMyAlert("Class='alert alert-success'", ' Complete', 'Success')

                    }

                    else {
                        ValidateMyAlert("Class='alert alert-warning'", ' no se pudo eliminar :( ', 'Warning')
                    }

                },

                error: function () {
                    ValidateMyAlert("Class='alert alert-danger'", 'stephan te falle. x2', 'Danger')
                }

            });

            $("#closeDeleteModal").click();
        })
    }

    function ValidateMyAlert(pClass, pString, tMessege) {

        if (!$("p[" + pClass + "]").length) {
            $("p[class='alert']").remove();
            $("#alertContainer").append("<p " + pClass + "><strong>" + tMessege + "</strong> " + pString + " </p>");
        }

    }

    function ShowChild(button) {

        var tr = $(button).closest("tr");
        var actualRow = $table.row(tr);
        var rowIndex = $table.row(actualRow).index();
        var row = $table.row(rowIndex).data();

        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/GetMyJsonValues",
            data: { BookId: row[1] },
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $.each(data, function (index, item) {
                    console.log(item.BookId);
                    if (item.BookId == row[1])
                    {
                        if (actualRow.child.isShown()) {
                            // This row is already open - close it
                            actualRow.child.hide();
                            tr.removeClass('shown');
                            changeOfClasses(button, "glyphicon glyphicon-plus", "glyphicon glyphicon-minus");
                        }
                        else {
                            // Open this row (the format() function would return the data to be shown)                   
                            actualRow.child(format(item.Authors)).show();
                            tr.addClass('shown');
                            changeOfClasses(button, "glyphicon glyphicon-minus", "glyphicon glyphicon-plus");
                        }
                    }
                });

            },

            error: function () {
                ValidateMyAlert("Class='alert alert-warning'", ' no se pudo eliminar :( ', 'Warning')
            }

        });

    }


    function changeOfClasses(Idelement, classToAdd, classToRemove) {
        $(Idelement).removeClass(classToRemove).addClass(classToAdd);
    }


    function format(objAuthorInformation) {

        var Trs ="";

        $.each(objAuthorInformation, function (index, item) { 
            Trs += "<tr>" +
                        "<td>" + item.FirstName + "</td>" +
                        "<td>" + item.SecondName + "</td>" +
                        "<td>" + item.FirstLastName + "</td>" +
                        "<td>" + item.SecondLastName + "</td>" +
                    "</tr>" 
        });
        
        return "<table>" +
                    "<thead>" +
                        "<tr>" +
                            "<th>  First name </th >" +
                            "<th> Second name </th >" +
                            "<th>  Lastname </th >" +
                            "<th>  Surname </th >" +
                        "</tr>" +
                    "</thead>" +
                        "<tbody>" +
                                Trs+
                        "</tbody>" +
                "</table>";
    }

</script>

<h2>Index</h2>
<div id="alertContainer"></div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table id="myDT" class="table">
    <thead>
        <tr>
            <th>
                <label>Show</label>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublicationYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                <label>Buttons</label>
            </th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="titleModelDelete">Delete</h4>
            </div>
            <div id="rowModalBody" class="modal-body">
                <label for="usr">Are you sure you want to delete a row</label><br>
                <button type="button" class="btn btn-default" id="yesDelete">yes</button>
                <button type="button" class="btn btn-default" id="noDelete" data-dismiss="modal">No</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="closeDeleteModal">Close</button>
            </div>
        </div>
    </div>
</div>

