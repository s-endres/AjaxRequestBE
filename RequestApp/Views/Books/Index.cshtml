@model IEnumerable<RequestApp.Models.Book>

@{
    ViewBag.Title = "Index";
}
<!-- Bootstrap Core CSS -->
@*<link href="/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">*@
<!-- MetisMenu CSS -->
<link href="/bower_components/metisMenu/dist/metisMenu.min.css" rel="stylesheet">
<!-- DataTables CSS -->
<link href="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet">
<!-- DataTables Responsive CSS -->
<link href="/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">
<!-- Custom Fonts -->
<link href="/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- DataTables JavaScript -->
<script src="/bower_components/datatables/media/js/jquery.dataTables.min.js"></script>
<script src="/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<script>
    $(document).ready(function () {
        $.get('http://localhost:61232/Books/GetMyJsonValues', function (data) {
            setDataTable(data);
        });

        $('#myDT tbody').on('click', '.glyphicon-trash', function () {
            $("#myModal").modal();
            var RowHTML = $(this).parents('tr');
            $("#hiddenInput").val($DTable.row(RowHTML).index());
        });

        $('#deleteBtn').on('click', function () {
            var rowIndex = $("#hiddenInput").val();
            
                $.ajax({
                type: "DELETE",
                url: "http://localhost:61232/Books/DeleteBook",
                data: JSON.stringify({
                    bookId: $DTable.row(rowIndex).data().BookId
                }),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (Data) {
                    if (Data) {
                        $DTable.row(rowIndex).remove().draw();
                    } else {
                        pError();
                    }
                },
                error: function () {
                    pError();
                }
            });

        });

        $('#myDT tbody').on('click', '.glyphicon-edit', function () {
            
            var Input=$DTable.row($(this).parents('tr')).index();
            window.location.href = 'http://localhost:61232/Books/Edit?BookId=' + $DTable.row(Input).data().BookId;
        })

        $('#myDT tbody').on('click', '.glyphicon-plus-sign, .glyphicon-minus-sign', function () {
            var tr = $(this).parents('tr');
            var row = $DTable.row(tr);
            var FirstClass = 'glyphicon-plus-sign';
            var SecondClass = 'glyphicon-minus-sign';
            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
                SwapIcon(this, SecondClass, FirstClass);

            } else {
                SwapIcon(this, FirstClass, SecondClass);
                setDropTable(row);
                //row.child(format(Data)).show();
                row.child(format(row.data().Authors)).show(); //-llamando directamente Author del objecto-
                tr.addClass('shown');
            }
        });

    });

    function pError() {
        if (!$("p[class='ErrorClass']").length) {
            $("tbody").append("<p class='ErrorClass' style='color: red;'>An error has occurred while loading the data </p>");
        }
    }

    function format(datarow) {
        var TRs = ""
        for (var i = 0; i < datarow.length; i++) {
            TRs += "<tr><td>" + datarow[i].FirstName + "</td><td>" + datarow[i].SecondName + "</td><td>" + datarow[i].FirstLastName + "</td><td>" + datarow[i].SecondLastName + "</td></tr>"
        }   
        return "<table>" +
            "<thead>" +
            "<tr>" +
            "<th>  First name </th >" +
            "<th> Second name </th >" +
            "<th>  Lastname </th>" +
            "<th>  First name </th >" +
            "</tr>" +
            "</thead>" +
            "<tbody>" + TRs +"</tbody>"+
            "</table>";
    }

    function SwapIcon(pSelector, pRClass, pAClass) {
        $(pSelector).addClass(pAClass);
        $(pSelector).removeClass(pRClass);
    }

    function setDataTable(Data) {
        $DTable = $('#myDT').DataTable({
            "data": Data,
            "columns": [
                { 'defaultContent': "<span class=\"glyphicon glyphicon-plus-sign\"></span>" },
                { "data": "BookId" },
                { "data": "Description" },
                { "data": "ImageUrl" },
                { "data": "PublicationYear" },
                { "data": "Publisher" },
                { "data": "Title" },
                { 'defaultContent': "<span class=\"glyphicon glyphicon-edit\"></span> | <span class=\"glyphicon glyphicon-trash data-toggle=\"modal\" data-target=\"#myModal\"></span>" }
            ],
            "order": [[1, 'asc']],
            responsive: true, 
            "columnDefs": [
                {
                    "targets": [0,7],
                    "sortable": false
                }
            ]            

        }); 
    }

    function setDropTable(row) {
        var x;
        $.ajax({
            type: "GET",
            url: "http://localhost:61232/Books/getBookAuthors",
            data: ({
                BookId: row.data().BookId
            }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (Data) {
                row.child(format(Data)).show();
            },
            error: function () {
                pError();
            }
        });
    }

</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table id="myDT" class="table">
    <thead>
        <tr> 
            <th>
                <label>More Info</label>
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.BookId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublicationYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                <label>Buttons</label>
            </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div>
    <div class="modal fade" id="myModal" role="checkbox">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Sure you want to delete?</p>
                    <input type="text" class="form-control" style="display:none" id="hiddenInput">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="deleteBtn" data-dismiss="modal">Delete</button>
                    <button type="button" class="btn btn-default" id="cancelBtn" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>






