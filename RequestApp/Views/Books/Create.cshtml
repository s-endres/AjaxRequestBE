@model RequestApp.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script>
    function SubmitForm() {
        $.ajax({
            type: 'post',
            url: 'http://localhost:61232/Books/AddNewBook',
            data: JSON.stringify({
                Title: $('#Title').val(),
                Description: $('#Description').val(),
                ImageURL: $('#ImageUrl').val(),
                Publisher: $('#Publisher').val(),
                PublicationYear: $('#PublicationYear').val()
            }),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function () {
                window.location = 'http://localhost:61232/Books/'
            },
            error: function () {
                $('form').prepend("<div class=\"alert alert-danger alert-dismissable\"><a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">×</a>No se pudo agregar el libro.</div>");
            }
        });
    }

    function ValidateForm() {
        var IsValid = true;
        $("input[type='text']").each(function () {
            if (IsEmpty($(this))) {
                IsValid = false;
            }
        });
        if (!IsNumber($("#PublicationYear"))) {
            IsValid = false;
        }
        if(IsValid){
            SubmitForm();
        }
    }

    function IsEmpty(input){
        if (input.val().trim() == '') {
            input.addClass('invalid-input');
            return true;
        } else {
            input.removeClass('invalid-input');
            return false;
        }
    }

    function IsNumber(input) {
        if ($.isNumeric(input.val()) && input.val() > 0) {
            input.removeClass('invalid-input');
            return true;
        } else {
            input.addClass('invalid-input');
            return false;
        }
    }

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" id="PublicationYear" name="PublicationYear" class="form-control"/>
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnSave" value="Create" class="btn btn-default" onclick="ValidateForm()"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

