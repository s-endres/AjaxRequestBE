@model RequestApp.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script>
    $(document).ready(function () {

        $("#btnSave").click(function () {
            createRow();
        });

        $table = $('#datatable1').DataTable({ responsive: true });

        $("#myModal").on('hidden.bs.modal', function () {
            cleanModalForm();
        })
    });

    function createRow() {
        if (validateMyForm()) {
            var obj = {

                Title: $("#Title").val(),
                Description: $("#Description").val(),
                ImageUrl: $("#ImageUrl").val(),
                Publisher: $("#Publisher").val(),
                PublicationYear: $("#PublicationYear").val()

            }
            Addrow(obj);
        }

    }

    function Addrow(obj) {


        $.ajax({
            type: "POST",
            url: "http://localhost:61232/Books/AddNewBook",
            data: JSON.stringify(obj),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data) {
                    window.location.replace("http://localhost:61232/Books/");
                }
                else {
                    ValidateMyAlert("Class='alert alert-warning'", 'stephan te falle :c', 'Warning')           
                }

            },

            error: function () {
                ValidateMyAlert("Class='alert alert-danger'", 'stephan te falle. x2', 'Danger')
            }

        });
    }

    function ValidateMyAlert(pClass, pString, tMessege) {

        if (!$("p["+ pClass + "]").length) {
            $("p[class='alert']").remove();
            $(".form-horizontal").append("<p "+pClass+"><strong>"+tMessege+"</strong> "+pString+" </p>");
        }

    }

    function validateMyForm() {
        var cellEmpty = true;

        $("input[type='text']").each(function () {
            if ($(this).val().trim() == "") {
                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
            }

            else { changeClass($(this).parent(), "has-error", "has-success"); }
        });

        $("input[type='number']").each(function () {

            if (!$.isNumeric($(this).val()) || $(this).val() <= 0) {

                changeClass($(this).parent(), "has-success", "has-error");
                cellEmpty = false;
            }
            else { changeClass($(this).parent(), "has-error", "has-success"); }

        });

        return cellEmpty;
    }

    function changeClass(input, classRemove, classAdd) {
        input.removeClass(classRemove);
        input.addClass(classAdd);
    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" id="PublicationYear" name="PublicationYear" class="form-control" />
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="panel-heading">
            DataTable Advanced Table |
            <button type="button" data-toggle="modal" data-target="#myModal">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </button>
        </div>
        <div class="row">

            <div class="col-md-12">

                <!-- Table -->

                <table id="datatable1" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Second Name</th>
                            <th>First Last Name</th>
                            <th>Second Last Name</th>
                        </tr>
                    </thead>
                    <tbody id="tabla2"> </tbody>
                </table>

            </div>
        </div>
        <div class="form-group">
            <div >
                <input type="button" id="btnSave" value="Create" class="btn btn-default"  disabled />
            </div>
        </div>
    </div>

    	<!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="titleModel">Add new Row to table</h4>
                </div>

                <div class="modal-body">

                    <label for="usr">First Name:</label><br>
                    <input type="text" class="form-control" id="dato1"> </input><br>
                    <label for="asd">Second Name:</label><br>
                    <input type="text" class="form-control" id="dato2"> </input><br>
                    <label for="eds">First Last Name:</label><br>
                    <input type="text" class="form-control" id="dato3"> </input><br>
                    <label for="wqe">Second Last Name:</label><br>
                    <input type="text" class="form-control" id="dato4"> </input><br>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" id="closeMyModal">Close</button>
                        <button type="button" class="btn btn-default" id="Add" onclick="Addrow()">Add Row</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
