@model RequestApp.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script>
    $("document").ready(function(){

        $("#btnSave").click(function () {
            if (ValidateForm()) {
                $.ajax({
                    type: "POST",
                    url: "http://localhost:61232/Books/AddNewBook",
                    data: JSON.stringify({
                        Title: $("#Title").val(),
                        Description: $("#Description").val(),
                        ImageUrl: $("#ImageUrl").val(),
                        Publisher: $("#Publisher").val(),
                        PublicationYear: $("#PublicationYear").val()
                    }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (Pdata) {
                        if (Pdata) {

                            if (!$('div[class="alert-info"]').length) {
                                $(".form-group").prepend('<div class="alert alert-info">< strong > Dudeee!</strong >Success inserting the data</div >');
                            }
                            window.location.replace("http://localhost:61232/Books/");
                        }
                        else {

                            if (!$('div[class="alert-danger"]').length) {
                                $(".form-group").prepend('<div class="alert alert-danger">< strong > Omaiga!</strong >Failed inserting the data</div >');
                            }
                        }
                    },
                    error: function () {

                    }
                });
            }
        })
    });
    function ValidateForm() {
        var Error = true;
        $(".form-control").not("#hidden").each(function () {
            if ($(this).val().trim() == "" || $(this).val() < 0) {
                $(this).addClass("Error");
                Error = false;
            }
            else {
                $(this).removeClass("Error");
            }
        });
        return Error;
    }
</script>
<style>
    .Error {
        border: solid 1px red;
    }
</style>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" id="PublicationYear" name="PublicationYear" class="form-control"/>
                @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnSave" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
